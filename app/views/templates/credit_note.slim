doctype html
html
  head
    meta charset='UTF-8'
    meta http-equiv='X-UA-Compatible' content='IE=edge'
    meta name='viewport' content='width=device-width, initial-scale=1.0'
    title Credit note
  body
    css:
      @font-face {
        font-family: 'Inter';
        font-style:  normal;
        font-weight: 100;
        font-display: swap;
        src: local("Inter-Thin");
      }
      @font-face {
        font-family: 'Inter';
        font-style:  italic;
        font-weight: 100;
        font-display: swap;
        src: local("Inter-ThinItalic");
      }

      @font-face {
        font-family: 'Inter';
        font-style:  normal;
        font-weight: 200;
        font-display: swap;
        src: local("Inter-ExtraLight");
      }
      @font-face {
        font-family: 'Inter';
        font-style:  italic;
        font-weight: 200;
        font-display: swap;
        src: local("Inter-ExtraLightItalic");
      }

      @font-face {
        font-family: 'Inter';
        font-style:  normal;
        font-weight: 300;
        font-display: swap;
        src: local("Inter-Light");
      }
      @font-face {
        font-family: 'Inter';
        font-style:  italic;
        font-weight: 300;
        font-display: swap;
        src: local("Inter-LightItalic");
      }

      @font-face {
        font-family: 'Inter';
        font-style:  normal;
        font-weight: 400;
        font-display: swap;
        src: local("Inter-Regular");
      }
      @font-face {
        font-family: 'Inter';
        font-style:  italic;
        font-weight: 400;
        font-display: swap;
        src: local("Inter-Italic");
      }

      @font-face {
        font-family: 'Inter';
        font-style:  normal;
        font-weight: 500;
        font-display: swap;
        src: local("Inter-Medium");
      }
      @font-face {
        font-family: 'Inter';
        font-style:  italic;
        font-weight: 500;
        font-display: swap;
        src: local("Inter-MediumItalic");
      }

      @font-face {
        font-family: 'Inter';
        font-style:  normal;
        font-weight: 600;
        font-display: swap;
        src: local("Inter-SemiBold");
      }
      @font-face {
        font-family: 'Inter';
        font-style:  italic;
        font-weight: 600;
        font-display: swap;
        src: local("Inter-SemiBoldItalic");
      }

      @font-face {
        font-family: 'Inter';
        font-style:  normal;
        font-weight: 700;
        font-display: swap;
        src: local("Inter-Bold");
      }
      @font-face {
        font-family: 'Inter';
        font-style:  italic;
        font-weight: 700;
        font-display: swap;
        src: local("Inter-BoldItalic");
      }

      @font-face {
        font-family: 'Inter';
        font-style:  normal;
        font-weight: 800;
        font-display: swap;
        src: local("Inter-ExtraBold");
      }
      @font-face {
        font-family: 'Inter';
        font-style:  italic;
        font-weight: 800;
        font-display: swap;
        src: local("Inter-ExtraBoldItalic");
      }

      @font-face {
        font-family: 'Inter';
        font-style:  normal;
        font-weight: 900;
        font-display: swap;
        src: local("Inter-Black");
      }
      @font-face {
        font-family: 'Inter';
        font-style:  italic;
        font-weight: 900;
        font-display: swap;
        src: local("Inter-BlackItalic");
      }


      /* ----------------------- variable ----------------------- */

      @font-face {
        font-family: 'Inter var';
        font-style: normal;
        font-weight: 100 900;
        font-display: swap;
        src: local('Inter-roman') format('woff2');
        font-named-instance: 'Regular';
      }

      @font-face {
        font-family: 'Inter var';
        font-style: italic;
        font-weight: 100 900;
        font-display: swap;
        src: local('Inter-italic') format('woff2');
        font-named-instance: 'Italic';
      }
      h1, h2, p { margin: 0; padding: 0; }
      html { font-family: Inter, sans-serif; }
      h1 { color: #19212e; font-weight: 700; font-size: 24px; line-height: 32px; }
      h2 {
        color: #19212e;
        font-weight: 700;
        font-size: 18px;
        line-height: 24px;
      }
      .body-1 {
        color: #19212e;
        font-weight: 600;
        font-size: 10px;
        line-height: 16px;
      }
      .body-2 {
        color: #19212e;
        font-weight: 400;
        font-size: 10px;
        line-height: 16px;
      }
      .body-3 {
        color: #66758f;
        font-weight: 400;
        font-size: 9px;
        line-height: 16px;
      }

      .mb-8 {
        margin-bottom: 8px;
      }
      .mb-24 {
        margin-bottom: 24px;
      }

      .overflow-auto {
        overflow: auto;
      }
      tr {
        break-inside: avoid;
      }

      .credit-note-title {
        display: inline;
      }
      .header-logo {
        float: right;
        max-height: 32px;
      }

      .credit-note-information-column {
        float: left;
        width: 50%;
      }
      .credit-note-information-table tr td:first-child {
        padding: 0 16px 0 0;
      }
      .credit-note-information-table tr td:last-child {
        width: 55%;
      }
      .credit-note-information-table, tr td{
        text-wrap: normal;
        word-wrap: break-word;
        vertical-align: top;
      }
      .credit-note-information-table {
        border-collapse: collapse;
        table-layout: fixed;
        width: 100%;
      }

      .billing-information-column {
        float: left;
        width: 50%;
      }

      .credit-note-resume-table tr {
        border-bottom: 1px solid #D9DEE7;
      }
      .credit-note-resume-table tr td {
        padding-top: 8px;
        padding-bottom: 8px;
      }
      .credit-note-resume-table tr td:last-child {
        text-align: right;
      }
      .credit-note-resume table {
        border-collapse: collapse;
      }

      .credit-note-resume .total-table tr td {
        padding-top: 8px;
        padding-bottom: 8px;
        text-align: right;
      }
      .credit-note-resume .total-table td:first-child {
        width: 50%;
      }
      .credit-note-resume .total-table tr:not(:last-child) td:nth-child(2) {
        border-bottom: 1px solid #D9DEE7;
        text-align: left;
        width: 35%;
      }
      .credit-note-resume .total-table tr:not(:last-child) td:nth-child(3) {
        border-bottom: 1px solid #D9DEE7;
        text-align: right;
        width: 35%;
      }
      .credit-note-resume .total-table tr:last-child td:nth-child(2) {
        text-align: left;
        width: 35%;
      }
      .credit-note-resume .total-table tr:last-child td:nth-child(3) {
        text-align: right;
        width: 15%;
      }

      .powered-by {
        width: 100%;
        text-align: right;
      }
      .powered-by span {
        color: #8c95a6;
      }
      .powered-by img {
        width: 37px;
        height: 11px;
        vertical-align: middle;
        margin-top: 2px;
      }

    .wrapper
      .mb-24
        h1.credit-note-title = I18n.t('credit_note.document_name')
        - if organization.logo.present?
          img.header-logo src="data:#{organization.logo.content_type};base64,#{organization.base64_logo}"

      .mb-24.overflow-auto
        .credit-note-information-column
          table.credit-note-information-table
            tr
              td.body-1 = I18n.t('credit_note.credit_note_number')
              td.body-2 = number
            tr
              td.body-1 = I18n.t('credit_note.invoice_number')
              td.body-2 = invoice.number
            tr
              td.body-1 = I18n.t('credit_note.issue_date')
              td.body-2 = I18n.l(issuing_date, format: :default)
        .credit-note-information-column
          table.credit-note-information-table
            - if customer.metadata.displayable.any?
              - customer.metadata.displayable.order(created_at: :asc).each do |metadata|
                tr
                  td.body-1 = metadata.key
                  td.body-2 = metadata.value

      .mb-24.overflow-auto
        .billing-information-column
          .body-1 = I18n.t('credit_note.credit_from')
          .body-2
            - if organization.legal_name.present?
              = organization.legal_name
            - else
              = organization.name
          - if organization.legal_number.present?
            .body-2 #{organization.legal_number}
          .body-2 = organization.address_line1
          .body-2 = organization.address_line2
          .body-2
            span
              = organization.zipcode
            - if organization.zipcode.present? && organization.city.present?
              span
                | , &nbsp;
            span
              = organization.city
          - if organization.state.present?
            .body-2 = organization.state
          .body-2 = ISO3166::Country.new(customer.country)&.common_name
          .body-2 = organization.email
          - if organization.tax_identification_number.present?
            .body-2 = I18n.t('invoice.tax_identification_number', tax_identification_number: organization.tax_identification_number)
        .billing-information-column
          .body-1 = I18n.t('credit_note.credit_to')
          .body-2
            - if customer.legal_name.present?
              | #{customer.legal_name}
            - else
              | #{customer.name}
          - if customer.legal_number.present?
            .body-2 #{customer.legal_number}
          .body-2 = customer.address_line1
          .body-2 = customer.address_line2
          .body-2
            span
              = customer.zipcode
            - if customer.zipcode.present? && customer.city.present?
              span
                | , &nbsp;
            span
              = customer.city
          .body-2 = customer.state
          .body-2 = ISO3166::Country.new(customer.country)&.common_name
          .body-2 = customer.email
          - if customer.tax_identification_number.present?
            .body-2 = I18n.t('invoice.tax_identification_number', tax_identification_number: customer.tax_identification_number)

      .mb-24
        h2.title-2.mb-8 = MoneyHelper.format(total_amount)
        .body-1
          - if credited? && refunded?
            = I18n.t('credit_note.credited_refunded_notice', issuing_date: I18n.l(issuing_date, format: :default))
          - elsif credited?
            = I18n.t('credit_note.credited_notice', issuing_date: I18n.l(issuing_date, format: :default))
          - else
            = I18n.t('credit_note.refunded_notice', issuing_date: I18n.l(issuing_date, format: :default))

      .credit-note-resume.mb-24.overflow-auto
        table.credit-note-resume-table width="100%"
          tr
            td.body-3 = I18n.t('credit_note.item')
            td.body-3 = I18n.t('credit_note.tax_rate')
            td.body-3 = I18n.t('credit_note.amount')

          - subscription_ids.each do |subscription_id|
            - if subscription_id.present?
              - if subscription_item(subscription_id).amount.positive?
                tr
                  td.body-1 width="60%"
                    | #{I18n.t('credit_note.subscription')} - #{Subscription.find_by(id: subscription_id)&.invoice_name}
                  td.body-2 width="20%" == TaxHelper.applied_taxes(subscription_item(subscription_id))
                  td.body-2 width="20%" = MoneyHelper.format(subscription_item(subscription_id).amount)
              - subscription_charge_items(subscription_id).where(fees: { true_up_parent_fee: nil }).group_by { |i| i.fee.charge_id }.each do |_charge_id, items|
                - item = items.first
                - if items.all? { |i| i.fee.charge_filter_id? }
                  - items.each do |item|
                    tr
                      td.body-1 = item.fee.invoice_name + FeeDisplayHelper.grouped_by_display(item.fee) + ' • ' + item.fee.filter_display_name(separator: ' • ')
                      td.body-2 width="20%" == TaxHelper.applied_taxes(item)
                      td.body-2 width="20%" = MoneyHelper.format(item.amount)
                  - items.select { |i| i.fee.true_up_fee.present? }.each do |item|
                    - if true_up_item = subscription_charge_items(subscription_id).find_by(fee: item.fee.true_up_fee)
                      tr
                        td.body-1 width="60%" = I18n.t('invoice.true_up_metric', metric: true_up_item.fee.invoice_name)
                        td.body-2 width="20%" == TaxHelper.applied_taxes(true_up_item)
                        td.body-2 width="20%" = MoneyHelper.format(true_up_item.amount)
                - else
                  tr
                    td.body-1 width="60%" = item.fee.invoice_name + FeeDisplayHelper.grouped_by_display(item.fee)
                    td.body-2 width="20%" == TaxHelper.applied_taxes(item)
                    td.body-2 width="20%" = MoneyHelper.format(item.amount)
                  - if item.fee.true_up_fee.present?
                    - if true_up_item = subscription_charge_items(subscription_id).find_by(fee: item.fee.true_up_fee)
                      tr
                        td.body-1 width="60%" = I18n.t('invoice.true_up_metric', metric: true_up_item.fee.invoice_name)
                        td.body-2 width="20%" == TaxHelper.applied_taxes(true_up_item)
                        td.body-2 width="20%" = MoneyHelper.format(true_up_item.amount)
            - else
              - add_on_items.each do |item|
                tr
                  td.body-1
                    - if item.fee.true_up_parent_fee_id?
                      | #{I18n.t('invoice.true_up_metric', metric: item.fee.true_up_parent_fee.invoice_name)}
                    - else
                      | #{item.fee.invoice_name}

                  td.body-2 width="20%" == TaxHelper.applied_taxes(item)
                  td.body-2 width="20%" = MoneyHelper.format(item.amount)

        table.total-table width="100%"
          - if coupons_adjustment_amount_cents.positive?
            tr
              td.body-2
              td.body-2 width="70%" = I18n.t('credit_note.coupon_adjustment')
              td.body-2 width="30%"
                | -#{MoneyHelper.format(coupons_adjustment_amount)}
          tr
            td.body-2
            td.body-2 width="70%" = I18n.t('credit_note.sub_total_without_tax')
            td.body-2 width="30%" = MoneyHelper.format(sub_total_excluding_taxes_amount)
          - if applied_taxes.present?
            - applied_taxes.order(tax_rate: :desc).each do |applied_tax|
              tr
                td.body-2
                td.body-2
                  = I18n.t('credit_note.tax', name: applied_tax.tax_name, rate: applied_tax.tax_rate, amount: MoneyHelper.format(applied_tax.base_amount))
                td.body-2 = MoneyHelper.format(applied_tax.amount)
          - else
            tr
              td.body-2
              td.body-2 = I18n.t('invoice.tax_name_with_details', name: 'Tax', rate: 0)
              td.body-2 = MoneyHelper.format(0.to_money(currency))
          - if credited?
            tr
              td.body-2
              td.body-2 = I18n.t('credit_note.credited_on_customer_balance')
              td.body-2 = MoneyHelper.format(credit_amount)
          - if refunded?
            tr
              td.body-2
              td.body-2 = I18n.t('credit_note.refunded')
              td.body-2 = MoneyHelper.format(refund_amount)
          tr
            td.body-2
            td.body-1 = I18n.t('credit_note.total')
            td.body-1 = MoneyHelper.format(total_amount)

      - if organization.eu_tax_management.present?
        - if applied_taxes.present?
          - applied_tax_codes = applied_taxes.pluck(:tax_code)
          p.body-3.mb-24
            - if applied_tax_codes.include?('lago_eu_tax_exempt')
              - if organization.country == 'FR'
                = I18n.t('invoice.taxes.fr_tax_exempt')
              - else
                = I18n.t('invoice.taxes.tax_exempt')
            - if applied_tax_codes.include?('lago_eu_reverse_charge')
              = I18n.t('invoice.taxes.reverse_charge')

      p.body-3.mb-24 = LineBreakHelper.break_lines(organization.invoice_footer)

      .powered-by
        span.body-2
          | #{I18n.t('credit_note.powered_by')} &nbsp;
        img src="#{::SlimHelper::PDF_LOGO_FILENAME}" alt="Lago Logo"
